var getWeekdDay = function (value, t) {
 // console.log(value,t)
  t = t.toString();
  //今天
  var today = getDate();
  //日期
  var date = getDate(t.slice(0, 4) + '.' + value);
  //星期
  var weekDay = date.getDay();
  //今天时间
  var time = today.getFullYear() + '-' + (today.getMonth() + 1) + '/' + today.getDate();
  //当前时间
  var time1 = date.getFullYear() + '-' + (date.getMonth() + 1) + '/' + date.getDate();
  //console.log(time,time1 )
  switch (weekDay) {
    case 0:
      week = "周日";
      break;
    case 1:
      week = "周一";
      break;
    case 2:
      week = "周二";
      break;
    case 3:
      week = "周三";
      break;
    case 4:
      week = "周四";
      break;
    case 5:
      week = "周五";
      break;
    case 6:
      week = "周六";
      break;
  }
  if (time == time1) {
    week = '今天'
  }
  return week
}
var getFirstStr = function (value) {
  //console.log(value)
  var cur_day = value.slice(value.length - 2, value.length)
  return Number(cur_day, cur_day)
}
var toFixed = function (value) {
  return Math.floor(value)
}

// 判断时间是不是在一个区间内
var timeIsinarea = function isTimes(enddate) {
  console.log(enddate)
  var startdate = getDate().getTime();
  var enddate = getDate(enddate).getTime();
  if (!enddate) {
    return true
  }
  if (enddate >= startdate || getDate() == getDate(enddate)) {
    return true;
  } else {
    return false;
  }
}
var sub = function (val, start, end) {
  console.log(val, start, end)
  if (val == undefined || val == '' || val == null) {
    return;
  }
  if (val.length > end && end) {
    return val.substring(start, end);
  } else if (!end || end == '') {
    return val.substring(start)
  } else {
    return val
  }
}
function replaceChar(str){
  if(str!=null){
   return str.replace(getRegExp(',','g'),'  |  ');
  }else{
    return str
  }
}
function replaceChar1(str,replaceChar,charCode){
  if(str!=null){
    return str.replace(getRegExp(replaceChar,'g'),charCode);
  }else{
    return str
  }
 
}
module.exports = {
  getWeekdDay: getWeekdDay,
  getFirstStr: getFirstStr,
  toFixed: toFixed,
  timeIsinarea: timeIsinarea,
  sub: sub,
  replaceChar:replaceChar,
  replaceChar1:replaceChar1
}